このディレクトリは，主に吉原が作成した様々な株価予測のモデルが入っています．
####################
#　　　モデル　　　#
####################
- MLP
- DBN
- SdA_theano
- RNN_RBM
- RNNRBM_MLP
- RNNRBM_DBN
- DBN_RNNRBM
- stackRnnRbm

本研究（吉原）の提案手法は"RNNRBM_DBN"となります．
以下にそれぞれのモデルの特徴を記します．
####################
# 　　　特徴　　　 #
####################

- MLP
    * multi-layer-perceptronであり，基本的にはtheanoのチュートリアルのコードと同じ．
    * 単体で使う，且つ，"gridSearch.py"などで用いる場合には，pretrainとfituneを分ける必要あり．
      (他ファイル同様)
    * 単体のみであれば動く仕様となっている．

- DBN
    * Deep-Belief-Networksであり，基本的にはチュートリアルと同じ．
    * しかし，MLPとは違い，pretrainとfinetuneを分けている．

- SdA_theano
    * Stacked-denoising-Autoencoders であり，基本的にはチュートリアルと同じ．

- RNN_RBM
    * Recurrent-Neural-Network-Restricted-Boltzamann-Machine であり，基本的にはチュートリアルと同じ．
    * しかし，チュートリアルでは，時刻 t の可視ユニットv(t)を予測するが目標であるが，
      本研究では，pre-training後のパラメータ W と b(t) の獲得が目標であるため，コードを一部書き換えている．
      詳しくは，コードのコメント参照．

- RNNRBM_MLP
    * RNN-RBMの上にMLPを重ねた構造を持つ．
    * 提案手法では，MLP->DBNとなっているため，比較することでDBNの有効性を示せる（かも）．
    
- RNNRBM_DBN
    * RNN-RBMの上にDBNを重ねた構造を持つ．
    * 提案手法

----------------------ここから先は作成するものの特に利用しなかったモデルたち------------------

- DBN_RNNRBM
    * DBNの上にRNN-RBMを重ねた構造を持つ．
    * 株価の変動の時間的な変化を捉えることが狙いで作成したが，結果が良くなかった．
    * 結局入力に数値情報を用いない限りは，株価の時間的な変化は捉えられないかも．

- stackRnnRbm
    * RNN-RBMをひたすら重ねたもの．
    * 潜在的な特徴も時間的な推移をするはず，という考えから作成したが，結果が良くない，且つ計算コストやばい．
